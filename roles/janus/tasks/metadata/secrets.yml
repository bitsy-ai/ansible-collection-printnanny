- name: Create janus user
  become: true
  ansible.builtin.user:
    name: '{{ janus_user }}'
    shell: /bin/bash
    groups: '{{ janus_groups }}'
    append: true

- name: Create {{ janus_conf_dir }}
  become: true
  ansible.builtin.file:
    state: directory
    mode: 0775
    path: '{{ janus_conf_dir }}'

- name: Create janus secrets
  ansible.builtin.set_fact:
    cacheable: true
    janus_admin_secret: "{{ lookup('password', janus_admin_secret_file, length=32 ) }}"
    janus_token: "{{ lookup('password', janus_token_file, length=32 ) }}"
  tags:
    - secrets
    - metadata

- name: Render janus-gateway config templates
  become: true
  async: 300
  poll: 0
  register: janus_template_async
  ansible.builtin.template:
    mode: 0775
    src: "{{ item.value }}"
    dest: "{{ janus_conf_dir }}/{{ item.value }}"
    owner: "{{ janus_user }}"
    force: true
  with_dict: "{{ janus_conf_template }}"
  when: janus_admin_secret is defined
  notify:
    - restart janus

- name: Render {{ janus_env_file }}
  become: true
  async: 300
  poll: 0
  register: janus_env_async
  ansible.builtin.template:
    mode: 0771
    src: "systemd/janus.env.j2"
    dest: "{{ janus_env_file }}"
    owner: "{{ janus_user }}"
    force: true
  when: janus_admin_secret is defined
  notify:
    - restart janus
