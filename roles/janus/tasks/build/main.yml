- name: Install required platform dependencies
  become: true
  apt:
    name:
      - automake
      - build-essential
      - cmake
      - cmake-data
      - gengetopt
      - git
      - libconfig-dev
      - libcurl4-openssl-dev
      - libglib2.0-dev
      - libjansson-dev
      - liblua5.3-dev
      - libmicrohttpd-dev
      - libogg-dev
      - libopus-dev
      - libsofia-sip-ua-dev
      - libssl-dev
      - libsystemd-dev
      - libtool
      - ninja-build
      - pkg-config
      - systemd
      - systemd-cron
      - wget
    state: present
  tags:
    - janus

- name: Create temporary janus build directory
  ansible.builtin.tempfile:
    state: directory
    prefix: janus
  register: janus_build_dir
  when: janus_upgrade_available

- name: Create temporary websockets build directory
  ansible.builtin.tempfile:
    state: directory
    prefix: libwebsockets
  register: janus_libwebsockets_build_dir
  when: janus_upgrade_available

- name: Create temporary libnice build directory
  ansible.builtin.tempfile:
    state: directory
    prefix: libnice
  register: janus_libnice_build_dir
  when: janus_upgrade_available

- name: Create temporary usrsctp build directory
  ansible.builtin.tempfile:
    state: directory
    prefix: usrsctp
  register: janus_usrsctp_build_dir
  when: janus_upgrade_available

- name: Create temporary libsrtp build directory
  ansible.builtin.tempfile:
    state: directory
    prefix: libsrtp
  register: janus_libsrtp_build_dir
  when: janus_upgrade_available

- name: Create workspace
  ansible.builtin.file:
    path: "{{ janus_build_dir.path }}"
    state: directory
    mode: 0775
    recurse: true
- name: 'Create {{ janus_build_dir.path }}/venv'
  ansible.builtin.pip:
    name:
      - 'pip>21,<22'
      - setuptools
      - wheel
    virtualenv_command: /usr/bin/python3 -m venv
    virtualenv: '{{ janus_build_dir.path }}/venv'
    extra_args: '--no-cache-dir'
  tags:
    - janus
    - setup
    - auto_update
- include_tasks: build/sources.yml
# first parallelizable stage of each component build
- include_tasks: build/build_async.yml
- name: Run - janus config autogen
  command:
    cmd: sh autogen.sh
    chdir: "{{ janus_build_dir.path }}/build"
  when: janus_upgrade_available
- name: Configure - janus build
  command:
    cmd: "./configure \
      --prefix={{ janus_install_dir }} \
      {{ janus_build_extras.rabbitmq | ternary('', '--disable-rabbitmq') }} \
      {{ janus_build_extras.mqtt | ternary('', '--disable-mqtt') }} \
      {{ janus_build_extras.websockets | ternary('', '--disable-websockets') }} \
      {{ janus_build_extras.nanomsg | ternary('', '--disable-nanomsg') }} \
      {{ janus_build_extras.systemd | ternary('--enable-systemd-sockets', '') }} \
      {{ janus_build_extras.recordplay | ternary('', '--disable-plugin-recordplay') }} \
      {{ janus_build_extras.sip | ternary('', '--disable-plugin-sip') }}"
    chdir: "{{ janus_build_dir.path }}/build"
  when: janus_upgrade_available

- name: Build - janus
  become: true
  command:
    cmd: make
    chdir: "{{ janus_build_dir.path }}/build"
  when: janus_upgrade_available

- name: Install - janus
  become: true
  command:
    cmd: make install
    chdir: "{{ janus_build_dir.path }}/build"
  when: janus_upgrade_available

- name: Set installed version facts
  ansible.builtin.set_fact:
    janus_version: "{{ janus_version }}"
    janus_libnice_version: "{{ janus_libnice_version }}"
    janus_usrsctp_version: "{{ janus_usrsctp_version }}"
    janus_libsrtp_version: "{{ janus_libsrtp_version }}"
    janus_libwebsockets_version: "{{ janus_libwebsockets_version }}"
    cacheable: true

- name: "Delete {{ janus_build_dir.path }} build directory"
  become: true
  ansible.builtin.file:
    path: "{{ janus_build_dir.path }}"
    state: absent
  when: janus_upgrade_available

- name: "Delete {{ janus_libwebsockets_build_dir.path }} build directory"
  become: true
  ansible.builtin.file:
    path: "{{ janus_libwebsockets_build_dir.path }}"
    state: absent
  when: janus_upgrade_available

- name: "Delete {{ janus_libnice_build_dir.path }} build directory"
  become: true
  ansible.builtin.file:
    path: "{{ janus_libnice_build_dir.path }}"
    state: absent
  when: janus_upgrade_available

- name: "Delete {{ janus_libsrtp_build_dir.path }} build directory"
  become: true
  ansible.builtin.file:
    path: "{{ janus_libsrtp_build_dir.path }}"
    state: absent
  when: janus_upgrade_available

- name: "Delete {{ janus_usrsctp_build_dir.path }} build directory"
  become: true
  ansible.builtin.file:
    path: "{{ janus_usrsctp_build_dir.path }}"
    state: absent
  when: janus_upgrade_available
