---
printnanny_monitoring_service: printnanny-monitoring.service
# begin gstreamer vars
gstreamer_service_name: gstreamer.service
gstreamer_service_unit_extra: |
  PartOf={{ printnanny_monitoring_service }}

# begin honeycomb
# write-only event key
honeycomb_dataset: 'printnanny_os'
honeycomb_api_key: '22ffab0ec6af32b2be565bc831555e44'
# end honecomb

# begin janus vars
janus_admin_secret: '{{ ansible_local.license.janus_admin_secret  if ansible_local.license.janus_admin_secret is defined else None }}'
janus_token: '{{ ansible_local.license.janus_token if ansible_local.license.janus_token is defined else None }}'

janus_service_name: janus.service
janus_service_unit_extra: |
  After={{ gstreamer_service_name }}
  PartOf={{ printnanny_monitoring_service }}

janus_user: janus
janus_groups:
  - printnanny
  - video
janus_install_dir: /opt/janus
janus_conf:
  janus:
    plugins_folder: "{{ janus_install_dir }}/lib/janus/plugins"
    transports_folder: "{{ janus_install_dir }}/lib/janus/transports"
    events_folder: "{{ janus_install_dir }}/lib/janus/events"
    loggers_folder: "{{ janus_install_dir }}/lib/janus/loggers"
    log_to_stdout: true
    debug_level: 4
    daemonize: false
    pid_file: "/var/run/janus.pid"
    session_timeout: 60
    candidates_timeout: 45
    reclaim_session_timeout: 0
    no_webrtc_encryption: false
    ignore_unreachable_ice_server: true
  janus.transport.http:
    admin_base_path: "/admin"
    admin_http_port: 7088
    admin_https_port: 7889
    admin_http: true
    admin_https: false
    base_path: "/janus"
    https: false
    https_port: 8089
    http: true
    http_port: 8088

janus_conf_template:
  janus.eventhandler.gelfevh.jcfg: janus.eventhandler.gelfevh.jcfg
  janus.eventhandler.sampleevh.jcfg: janus.eventhandler.sampleevh.jcfg
  janus.eventhandler.wsevh.jcfg: janus.eventhandler.wsevh.jcfg
  janus.jcfg: janus.jcfg
  janus.plugin.audiobridge.jcfg: janus.plugin.audiobridge.jcfg
  janus.plugin.echotest.jcfg: janus.plugin.echotest.jcfg
  janus.plugin.nosip.jcfg: janus.plugin.nosip.jcfg
  janus.plugin.recordplay.jcfg: janus.plugin.recordplay.jcfg
  janus.plugin.sip.jcfg: janus.plugin.sip.jcfg
  janus.plugin.streaming.jcfg: janus.plugin.streaming.jcfg
  janus.plugin.textroom.jcfg: janus.plugin.textroom.jcfg
  janus.plugin.videocall.jcfg: janus.plugin.videocall.jcfg
  janus.plugin.voicemail.jcfg: janus.plugin.voicemail.jcfg
  janus.transport.http.jcfg: janus.transport.http.jcfg
  janus.transport.pfunix.jcfg: janus.transport.pfunix.jcfg
  janus.transport.websockets.jcfg: janus.transport.websockets.jcfg


janus_admin_url: 'http://localhost:{{ janus_conf["janus.transport.http"]["admin_http_port"] }}{{ janus_conf["janus.transport.http"]["admin_base_path"] }}'
janus_url: 'http://localhost:{{ janus_conf["janus.transport.http"]["http_port"] }}{{ janus_conf["janus.transport.http"]["base_path"] }}'

janus_exec_start_post:
  - >-
    printnanny
    janus-admin
    --host {{ janus_admin_url }}
    addtoken
    --token ${JANUS_TOKEN}
    --adminsecret ${JANUS_ADMIN_SECRET}

# updater service defined in updater vars section below
janus_updater: printnanny-update-janus
# end janus vars

# ansible / updater vars
printnanny_install_dir: /opt/printnanny
printnanny_data_dir: '{{ printnanny_install_dir }}/data'
printnanny_backups_dir: "{{ printnanny_install_dir }}/backups"
printnanny_ansible_dir: "{{ printnanny_install_dir }}/ansible"

ansible_config:
  fact_caching_timeout: 86400
  fact_caching: jsonfile
  fact_caching_connection: '/var/run/{{ updater_app_name }}/fact_cache'

updater_app_name: printnanny
updater_tmpfs: '/var/run/{{ updater_app_name }}'
ansible_lockfile: '/var/run/{{ updater_app_name }}/ansible.lock'
updater_user: printnanny
updater_venv: '{{ printnanny_ansible_dir }}/venv'
ansible_collection_updater: ansible-updater
ara_enabled: true

updaters:
  # each entry is a map {} with keys:
  # name: ""
  # playbooks: []
  # service_template: ""
  # service_enabled: ""
  # service_state: ""
  # user: ""
  # timer: "" see realtime timers: https://wiki.archlinux.org/title/Systemd/Timers
  # add printnanny-updaters here
  - name: "printnanny-update-system"
    app_name: printnanny
    user: printnanny
    playbooks:
      - "bitsyai.rpi.printnanny.update.system --tags secrets"
      - "bitsyai.rpi.printnanny.update.system"
    service_template: "updater.service.j2"
    service_enabled: false
    state: started
    timer: OnCalendar=Tue,Sat 20:00
  - name: "printnanny-update-janus"
    app_name: printnanny
    user: printnanny
    playbooks:
      - "bitsyai.rpi.printnanny.update.janus --tags secrets"
      - "bitsyai.rpi.printnanny.update.janus"
    service_template: "updater.service.j2"
    service_enabled: false
    state: started
    timer: OnCalendar=Tue,Sat 20:30
  - name: "printnanny-update-rs"
    app_name: printnanny
    user: printnanny
    playbooks:
      - "bitsyai.rpi.printnanny.update.cli --tags secrets"
      - "bitsyai.rpi.printnanny.update.cli"
    service_template: "updater.service.j2"
    service_enabled: false
    state: started
    timer: OnCalendar=Tue,Sat 21:00
