- name: Extract license archive
  ansible.builtin.unarchive:
    src: '{{ printnanny_license_zip }}'
    dest: '{{ printnanny_data_dir }}'

- name: Check if device.json exists
  ansible.builtin.stat:
    path: '{{ printnanny_device_json_file }}'
  register: check_printnanny_device_json_file

- name: activate license
  ansible.builtin.command:
    cmd: printnanny activate
    creates: '{{ printnanny_data_dir }}/printnanny_device_info.json'
  when: check_printnanny_device_json_file.stat.exists

- name: Create Read printnanny_device.json into Ansible var
  ansible.builtin.include_vars:
    file: '{{ printnanny_device_json_file }}'
    name: printnanny_device_json
  when: check_printnanny_device_json_file.stat.exists

- name: Create /opt/printnanny/facts.d/
  become: true
  ansible.builtin.file:
    path: '{{ printnanny_facts_path }}'
    state: directory
    mode: 0664

- name: Render /etc/ansible/facts.d/device.fact
  become: true
  ansible.builtin.file:
    src: facts.d/device.fact
    dest: '{{ printnanny_device_fact }}'
    mode: 0755

- name: Render /etc/ansible/facts.d/license.fact
  ansible.builtin.file:
    src: facts.d/license.fact
    path: '{{ printnanny_license_fact }}'
    mode: 0755
