- name: Install openssh-server
  ansible.builtin.apt:
    name: openssh-server

# TODO send certificate to remote for signing after user authenticates
- name: Create provisional keypair
  become: true
  community.crypto.openssh_keypair:
    backend: opensshbin
    group: '{{ printnanny_user }}'
    owner: '{{ printnanny_user }}'
    path: '{{ printnanny_keys_private }}'
    regenerate: 'full_idempotence'
    type: ecdsa
    size: 256
  tags:
    - secrets

- name: Create '{{ printnanny_cacerts_dir }}'
  become: true
  ansible.builtin.file:
    path: '{{ printnanny_cacert_dir }}'
    state: directory
    mode: 0770
    group: '{{ printnanny_user }}'
    owner: '{{ printnanny_user }}'

- name: Download GCP LTS CA Certificate {{ gcp_lts_ca_primary }}
  become: true
  ansible.builtin.get_url:
    url: '{{ gcp_lts_ca_primary }}'
    dest: '{{ printnanny_cacert_dir }}/{{ gcp_lts_ca_primary | basename }}'
    mode: 0770
    group: '{{ printnanny_user }}'
    owner: '{{ printnanny_user }}'
- name: Download GCP LTS CA Certificate {{ gcp_lts_ca_backup }}
  become: true
  ansible.builtin.get_url:
    url: '{{ gcp_lts_ca_primary }}'
    dest: '{{ printnanny_cacert_dir }}/{{ gcp_lts_ca_backup | basename }}'
    mode: 0770
    group: '{{ printnanny_user }}'
    owner: '{{ printnanny_user }}'

- name: Create set fact printnanny_www_secret_key
  become: true
  ansible.builtin.set_fact:
    printnanny_www_secret_key: "{{ lookup('password', printnanny_www_secret_file, 'length=32') }}"
  tags:
    - secret
