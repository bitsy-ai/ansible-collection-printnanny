- name: Create bitsy updater user
  ansible.builtin.user:
    name: "{{ updater.user }}"
    state: present
    shell: /sbin/nologin
    comment: "Ansible service user"
  become: true

- name: Install sudo pkg
  become: true
  ansible.builtin.apt:
    name:
      - sudo

- name: Configure ansible sudoers
  become: true
  ansible.builtin.copy:
    dest: "/etc/sudoers.d/00_ansible_pwdless.conf"
    content: "{{ updater.user }} ALL=(ALL) NOPASSWD: ALL"
    validate: visudo -cf %s
    mode: "0644"

- name: Install apt dependencies
  become: true
  ansible.builtin.apt:
    name:
      - pkg-config
      - python3-dev
      - python3-pip
      - python3-venv
      # required by ansible.builtin.package_facts
      - python3-apt
      - systemd
      - systemd-cron

- name: Create /etc/ansible
  become: true
  file:
    path: /etc/ansible
    state: directory

- name: 'Create ansible virtual env'
  become: true
  pip:
    name:
      - 'pip>21,<22'
      - setuptools
      - wheel
    virtualenv_command: /usr/bin/python3 -m venv
    virtualenv: '{{ updater.ansible_venv }}'
    extra_args: '--no-cache-dir'

- name: Install ansible into the specified (virtualenv)
  become: true
  pip:
    name:
      - '{{ updater.ansible_version }}'
      - '{{ updater.ara_version }}'
    virtualenv_command: /usr/bin/python3 -m venv
    virtualenv: '{{ updater.ansible_venv }}'
    extra_args: '--no-cache-dir'

- name: Setup passwordless sudo for ansible user
  become: true
  ansible.builtin.copy:
    content: '%{{ updater.user }} ALL=(ALL) NOPASSWD: ALL }}'
    dest: /etc/sudoers.d/00_ansible_pwdless.conf
    owner: root
    group: root
    mode: 0440

- name: Get ara plugin configs
  command: "{{ ansible_venv }} -m ara.setup.env"
  register: ara_plugin_config

- name: Create ansible.cfg
  become: true
  ansible.builtin.template:
    mode: 0664
    src: ansible.cfg.j2
    dest: "/etc/ansible/ansible.cfg"

- name: Create ansible pull hosts
  become: true
  ansible.builtin.copy:
    src: files/hosts
    dest: '{{ updater.ansible_hosts_file }}'
    mode: 0664

- name: Create bitsy updater systemd slice
  become: true
  ansible.builtin.template:
    mode: 0664
    src: bitsy_updater.slice.j2
    dest: '/etc/systemd/system/bitsy_updater.slice'

- name: Create bitsy updater systemd timers
  become: true
  ansible.builtin.template:
    mode: 0664
    src: bitsy_updater.timer.j2
    dest: '/etc/systemd/system/{{ item.name }}.timer'
  with_items: '{{ updater_collections }}'

- name: Create bitsy updater systemd units
  become: true
  ansible.builtin.template:
    mode: 0664
    src: bitsy_updater.service.j2
    dest: '/etc/systemd/system/{{ item.name }}.service'
  with_items: '{{ updater_collections }}'

- name: Enable units
  become: true
  ansible.builtin.systemd:
    name: '{{ item.name }}'
    state: started
    enabled: true
    daemon_reload: true
  with_items: '{{ updater_collections }}'
