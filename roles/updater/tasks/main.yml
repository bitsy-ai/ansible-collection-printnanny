- name: Create rpi-updater updater user
  ansible.builtin.user:
    name: "{{ updater.user }}"
    state: present
    shell: /sbin/nologin
    comment: "Ansible service user"
  become: true

- name: Install sudo pkg
  become: true
  ansible.builtin.apt:
    name:
      - sudo

- name: Configure ansible sudoers
  become: true
  ansible.builtin.copy:
    dest: "/etc/sudoers.d/00_ansible_pwdless.conf"
    content: "{{ updater.user }} ALL=(ALL) NOPASSWD: ALL"
    validate: visudo -cf %s
    mode: "0644"

- name: Install apt dependencies
  become: true
  ansible.builtin.apt:
    name:
      - pkg-config
      - python3-dev
      - python3-pip
      - python3-venv
      # required by ansible.builtin.package_facts
      - python3-apt
      - systemd
      - systemd-cron

- name: Create /etc/ansible
  become: true
  ansible.builtin.file:
    path: /etc/ansible
    state: directory
    mode: 0664

- name: Render requirements.yml
  become: true
  ansible.builtin.template:
    mode: 0664
    src: requirements.yml.j2
    dest: "{{ updater.ansible_requirements }}"

- name: Create /var/run/ansible
  become: true
  ansible.builtin.file:
    path: /var/run/ansible
    state: directory
    mode: 0664

- name: 'Create ansible virtual env'
  become: true
  ansible.builtin.pip:
    name:
      - 'pip>21,<22'
      - setuptools
      - wheel
    virtualenv_command: /usr/bin/python3 -m venv
    virtualenv: '{{ updater.ansible_venv }}'
    extra_args: '--no-cache-dir'

- name: Install ansible into the specified (virtualenv)
  become: true
  ansible.builtin.pip:
    name: '{{ updater.ansible_version }}'
    virtualenv_command: /usr/bin/python3 -m venv
    virtualenv: '{{ updater.ansible_venv }}'
    extra_args: '--no-cache-dir'

- name: Setup passwordless sudo for ansible user
  become: true
  ansible.builtin.copy:
    content: '%{{ updater.user }} ALL=(ALL) NOPASSWD: ALL }}'
    dest: /etc/sudoers.d/00_ansible_pwdless.conf
    owner: root
    group: root
    mode: 0440

- name: Create ansible.cfg
  become: true
  ansible.builtin.template:
    mode: 0664
    src: ansible.cfg.j2
    dest: "/etc/ansible/ansible.cfg"

- name: Create ansible pull hosts
  become: true
  ansible.builtin.copy:
    src: files/hosts
    dest: '{{ updater.ansible_hosts_file }}'
    mode: 0664

- name: Pre-install Ansible Collection
  ansible.builtin.command: 
    argv:
      - '{{ updater.ansible_venv }}/bin/ansible-galaxy'
      - collection
      - install
      - '{{ updater_collection.url }}'

- name: Create updater systemd slice
  become: true
  ansible.builtin.template:
    mode: 0664
    src: rpi-updater.slice.j2
    dest: '/etc/systemd/system/{{ updater.name }}.slice'

- name: Create updater systemd timers
  become: true
  ansible.builtin.template:
    mode: 0664
    src: rpi-updater.timer.j2
    dest: '/etc/systemd/system/{{ updater.name }}.timer'

- name: Create updater systemd service unit
  become: true
  ansible.builtin.template:
    mode: 0664
    src: rpi-updater.service.j2
    dest: '/etc/systemd/system/{{ updater.name }}.service'

- name: Enable unit
  become: true
  ansible.builtin.systemd:
    name: '{{ updater.name }}'
    enabled: true
