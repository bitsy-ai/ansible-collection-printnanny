- name: Install sudo pkg
  become: true
  ansible.builtin.apt:
    name:
      - sudo
  tags:
    - setup

- name: Create updater user
  become: true
  ansible.builtin.user:
    name: "{{ updater_user }}"
    state: present
    shell: /sbin/nologin
    comment: "Ansible service user"
    groups:
      - adm
      - netdev
      - sudo
  tags:
    - setup

- name: Configure ansible sudoers
  become: true
  ansible.builtin.copy:
    dest: "/etc/sudoers.d/00_ansible_pwdless.conf"
    content: "{{ updater_user }} ALL=(ALL) NOPASSWD: ALL"
    validate: visudo -cf %s
    mode: "0644"
  tags:
    - setup

- name: Install apt dependencies
  become: true
  ansible.builtin.apt:
    name:
      - pkg-config
      - python3-dev
      - python3-pip
      - python3-venv
      # required by ansible.builtin.package_facts
      - python3-apt
      - systemd
      - systemd-cron
  tags:
    - setup

- name: Create /etc/ansible
  become: true
  ansible.builtin.file:
    path: /etc/ansible
    state: directory
    mode: 0664
  tags:
    - setup

- name: 'Update updater user-level site packages'
  become_user: '{{ updater_user }}'
  ansible.builtin.pip:
    name:
      - 'pip>21,<22'
      - setuptools
      - wheel
    virtualenv_command: /usr/bin/python3 -m venv
    virtualenv: '{{ updater_venv }}'
    extra_args: '--no-cache-dir'
  tags:
    - setup

- name: Install ansible into user site packages
  become_user: '{{ updater_user }}'
  ansible.builtin.pip:
    name: '{{ updater_ansible_version }}'
    virtualenv_command: /usr/bin/python3 -m venv
    virtualenv: '{{ updater_venv }}'
    extra_args: '--no-cache-dir'
  tags:
    - setup
    - requirements

- name: Setup passwordless sudo for ansible user
  become: true
  ansible.builtin.copy:
    content: '%{{ updater_user }} ALL=(ALL) NOPASSWD: ALL }}'
    dest: /etc/sudoers.d/00_ansible_pwdless.conf
    owner: root
    group: root
    mode: 0440
  tags:
    - setup

- name: Create ansible.cfg
  become: true
  ansible.builtin.template:
    mode: 0664
    src: ansible.cfg.j2
    dest: "/etc/ansible/ansible.cfg"
  tags:
    - setup

- name: Create updater systemd timers
  become: true
  ansible.builtin.template:
    mode: 0664
    src: auto-upgrader.timer.j2
    dest: '/etc/systemd/system/{{ auto_upgrade_service }}.timer'
  tags:
    - setup

- name: Create updater service
  become: true
  ansible.builtin.template:
    mode: 0664
    src: auto-upgrader.service.j2
    dest: '/etc/systemd/system/{{ auto_upgrade_service }}.service'
  tags:
    - setup

- name: Create ansible-updater service
  become: true
  ansible.builtin.template:
    mode: 0664
    src: ansible-updater.service.j2
    dest: '/etc/systemd/system/{{ ansible_update_service }}.service'
  tags:
    - setup

- name: Enable ansible update service
  become: true
  ansible.builtin.systemd:
    name: '{{ ansible_update_service }}'
    enabled: true
  tags:
    - setup

- name: Enable auto upgrade service
  become: true
  ansible.builtin.systemd:
    name: '{{ auto_upgrade_service }}'
    enabled: true
  tags:
    - setup

- name: Create ansible pull hosts
  become: true
  ansible.builtin.copy:
    src: files/hosts
    dest: '{{ ansible_hosts_file }}'
    mode: 0664
  tags:
    - setup
