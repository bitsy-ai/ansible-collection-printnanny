- name: Install sudo pkg
  become: true
  ansible.builtin.apt:
    name:
      - sudo
  tags:
    - setup

- name: Create updater user
  become: true
  ansible.builtin.user:
    name: '{{ updater_user }}'
    state: present
    shell: /sbin/nologin
    comment: "Ansible service user"
    groups:
      - adm
      - sudo
  tags:
    - setup

- name: Install apt dependencies
  become: true
  ansible.builtin.apt:
    name:
      - pkg-config
      - python3-dev
      - python3-pip
      - python3-venv
      # required by ansible.builtin.package_facts
      - python3-apt
      - systemd
      - systemd-cron
  tags:
    - setup

- name: Create /etc/ansible
  become: true
  ansible.builtin.file:
    path: /etc/ansible
    state: directory
    mode: 0755
  tags:
    - setup

- name: 'Update ansible virtualenv pip, setuptools'
  become_user: '{{ updater_user }}'
  ansible.builtin.pip:
    name:
      - 'pip>21,<22'
      - setuptools
      - wheel
    virtualenv_command: /usr/bin/python3 -m venv
    virtualenv: '{{ updater_venv }}'
    extra_args: '--no-cache-dir'
  tags:
    - setup

- name: Install ansible into virtual env
  become_user: '{{ updater_user }}'
  ansible.builtin.pip:
    name: '{{ ansible_updater_version }}'
    virtualenv_command: /usr/bin/python3 -m venv
    virtualenv: '{{ updater_venv }}'
    extra_args: '--no-cache-dir'
  tags:
    - setup
    - requirements

- name: Setup passwordless sudo for ansible user
  become: true
  ansible.builtin.copy:
    content: '{{ updater_user }} ALL=(ALL) NOPASSWD: ALL'
    dest: /etc/sudoers.d/010_ansible-no-passwd
    owner: root
    group: root
    mode: 0440
    validate: visudo -cf %s
  tags:
    - setup

# get ara configuration before rendering ansible.cfg (if enabled)
- name: Configure ara
  ansible.builtin.include_tasks: ara.yml
  when: ara_enabled

- name: Create ansible.cfg
  become: true
  ansible.builtin.template:
    mode: 0755
    src: ansible.cfg.j2
    dest: "/etc/ansible/ansible.cfg"
    force: true
  tags:
    - setup

- name: Create ansible-updater service
  become: true
  ansible.builtin.template:
    mode: 0644
    src: ansible-updater.service.j2
    dest: '/etc/systemd/system/{{ ansible_collection_updater }}.service'
    force: true
  tags:
    - setup

- name: Enable ansible update service
  become: true
  ansible.builtin.systemd:
    name: '{{ ansible_collection_updater }}'
    enabled: true
    no_block: true
  tags:
    - setup
  notify:
    - restart ansible-updater


- name: Create updater systemd units
  become: true
  ansible.builtin.template:
    mode: 0644
    src: '{{ item.service_template }}'
    dest: '/etc/systemd/system/{{ item.name }}.service'
    force: true
  tags:
    - setup
  with_items: '{{ updaters }}'

- name: Create updater systemd timers
  become: true
  ansible.builtin.template:
    mode: 0644
    src: updater.timer.j2
    dest: '/etc/systemd/system/{{ item.name }}.timer'
  tags:
    - setup
  with_items: '{{ updaters }}'

- name: Set updater service enabled
  become: true
  ansible.builtin.systemd:
    name: '{{ item.name }}.service'
    enabled: '{{ item.enabled }}'
    state: '{{ item.state }}'
    no_block: true
  tags:
    - setup
  with_items: '{{ updaters }}'

- name: Set updater timer enabled
  become: true
  ansible.builtin.systemd:
    name: '{{ item.name }}.timer'
    enabled: '{{ item.enabled }}'
    state: '{{ item.state }}'
    no_block: true
  tags:
    - setup
  with_items: '{{ updaters }}'

- name: Create ansible pull hosts
  become: true
  ansible.builtin.copy:
    src: files/hosts
    dest: '{{ ansible_hosts_file }}'
    mode: 0755
  tags:
    - setup
